@model Fatec.AAP4.Web.Models.estoque_produtoacabado

@{
    ViewBag.Title = "Alterar";
}

<h2>Alterar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    if (ViewBag.SemMateriaPrima == 1)
    {
        <div class="alert alert-warning" role="alert">
            <h4>Sem estoque de materia-prima <br /><br />
            - Estoque atual: @ViewBag.Atual<br />
            - Estoque solicitado: @ViewBag.Requirida<br />
            - Estoque Necessário: @ViewBag.necessario
             </h4>
        </div>
    }

    <div class="form-horizontal">
        <h4>estoque_produtoacabado</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id_estoque_prodacab)

        <div class="form-group">
            @Html.LabelFor(model => model.id_produto, "id_produto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_produto", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_produto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_planocontas, "id_planocontas", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_planocontas", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_planocontas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quant_minima, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quant_minima, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quant_minima, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.quant_maxima, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quant_maxima, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quant_maxima, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quant_atual, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quant_atual, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quant_atual, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar Alterações" class="btn btn-warning btn-sm" />
            </div>
        </div>
    </div>
}

<div>
        @Html.ActionLink("Voltar", "Index", null,new { @class = "btn btn-default btn-sm" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
